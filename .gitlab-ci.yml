image: 'drupal:php7.4-apache'

stages:
  - build
  - validate
  - setup
  - test
  - deploy

variables:
  APP_NAME: blt-gitlab-pipelines
  BLT: ./vendor/bin/blt
  SCRIPT_DIR: ./vendor/flux423/blt-gitlab-pipelines/scripts/gitlab
  MYSQL_DATABASE: drupal
  MYSQL_ROOT_PASSWORD: drupal

cache:
  key: '${CI_COMMIT_REF_SLUG}'
  policy: pull-push
  paths: &ref_0
    - $HOME/.npm
    - $HOME/.nvm
    - $CI_PROJECT_DIR/docroot/core
    - $CI_PROJECT_DIR/docroot/libraries
    - $CI_PROJECT_DIR/docroot/modules/contrib
    - $CI_PROJECT_DIR/docroot/themes/contrib
    - $CI_PROJECT_DIR/docroot/profiles/contrib
    - $CI_PROJECT_DIR/vendor
.global_cache:
  cache:
    key: '${CI_COMMIT_REF_SLUG}'
    policy: pull-push
    paths: *ref_0
  only:
    variables:
      - $GITLAB_CI
      - $CI_COMMIT_SHA
      - $CI_COMMIT_REF_NAME
      - $CI_JOB_ID
      - $CI_SERVER_VERSION
      - $CI_COMMIT_BRANCH
      - $CI_MERGE_REQUEST_ID
      - $MYSQL_DATABASE
      - $MYSQL_ROOT_PASSWORD

services:
  - 'mysql:5.7'

before_script: []

build:
  stage: build
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | ssh-add - > ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - curl -sL https://deb.nodesource.com/setup_12.x | bash -
    - apt-get update -y && apt-get upgrade -y
    - apt-get install -y build-essential git zip unzip python nodejs rsync nano openssh-client libxss1 default-mysql-client
    - apt-get update -y && apt-get upgrade -y
    - npm install npm@latest -g
    - composer self-update --2
    - composer clear --ansi
    - composer validate --no-check-all --ansi
    - composer install --prefer-dist
  extends: .global_cache
  allow_failure: false
  artifacts:
    paths:
       - target/$CI_COMMIT_REF_SLUG
    expire_in: 2 days
  cache:
    key: ${CI_BUILD_REF_NAME}
    policy: pull-push
  script:
    - echo ""

validate:
  stage: validate
  extends:
    - .global_cache
    - build
  dependencies:
    - build
  needs:
    - build
  allow_failure: false
  script:
    - $SCRIPT_DIR/setup_env.sh

setup:
  stage: setup
  extends:
    - .global_cache
    - build
    - validate
  dependencies:
    - build
    - validate
  needs:
    - build
  allow_failure: false
  artifacts:
    paths:
       - target/$CI_COMMIT_REF_SLUG
    expire_in: 2 days
  cache:
    key: ${CI_BUILD_REF_NAME}
    policy: pull-push
  script:
    - $SCRIPT_DIR/setup_app.sh

test:
  stage: test
  extends:
    - .global_cache
    - build
    - setup
  needs:
    - build
    - setup
  dependencies:
    - build
    - setup
  allow_failure: true
  cache:
    key: ${CI_BUILD_REF_NAME}
    policy: pull-push
  script:
    - $SCRIPT_DIR/test.sh

deploy:
  stage: deploy
  extends:
    - .global_cache
    - build
    - setup
  needs:
    - build
    - setup
  dependencies:
    - build
    - setup
  allow_failure: false
  artifacts:
    paths:
       - target/$CI_COMMIT_REF_SLUG
    expire_in: 2 days
  cache:
    key: ${CI_BUILD_REF_NAME}
    policy: pull
  script:
    - $SCRIPT_DIR/deploy_artifact.sh
